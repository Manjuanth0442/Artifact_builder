# (c) Copyright 2018-2019 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.

#Child script for NIC Teaming.
upload -<<END /EFI/HPE/isdeploy/tmp/Mgmt-NIC-bonding.bash
#! /bin/bash
team_name=$1
net1_mac=$2
net2_mac=$3
vlan=$4
net1_ip=$5
net1_gw=$6
domain=$7
dns1=$8
dns2=$9
netmask=${10}

mask2cidr() {
    nbits=0
    IFS=.
    for dec in $1 ; do
        case $dec in
            255) let nbits+=8;;
            254) let nbits+=7;;
            252) let nbits+=6;;
            248) let nbits+=5;;
            240) let nbits+=4;;
            224) let nbits+=3;;
            192) let nbits+=2;;
            128) let nbits+=1;;
            0);;
            *) echo "Error: $dec is not recognised"; exit 1
        esac
    done
    echo "$nbits"
}


#Check the maching interface names for mac addresses.

 interfaces=`ls /sys/class/net/`
 for iface in $interfaces
 do
  mac=`cat /sys/class/net/$iface/address`
  if [ ${mac,,} == ${net1_mac,,} ]
  then
   nic1=$iface
  elif [ ${mac,,} == ${net2_mac,,} ]
  then
   nic2=$iface
  fi
 done
	
#Add $team_name connection.

port1=$(nmcli con | grep $nic1 |  awk '{ print $1 }')
port2=$(nmcli con | grep $nic2 |  awk '{ print $1 }')
if [ -z $port1 ] && [ -z $port2 ]
then

  nmcli connection add type team con-name $team_name ifname $team_name config '{"runner": {"name": "activebackup"}, "link_watch": {"name": "ethtool"}}'
  nmcli connection add type team-slave con-name $team_name-port1 ifname $nic1 master $team_name
  nmcli connection add type team-slave con-name $team_name-port2 ifname $nic2 master $team_name
else
  team_name=$(echo $port1 | cut -f1 -d-)
  echo "using team_name: $team_name"
fi

if [[ -z $net1_ip ]]
then
 echo "Configure $team_name for DHCP"
 if [ $vlan -ne 0 ];then
  echo "Configure $team_name for DHCP with vlan tag $vlan"
#  nmcli connection modify $team_name ipv6.method ignore
  nmcli connection add type vlan con-name $team_name-vlan$vlan ifname $team_name.$vlan id $vlan dev $team_name
 fi

else
 
 if [ $vlan -ne 0 ];then
  echo "Configure $team_name for static with vlan tag $vlan."
#  nmcli connection modify $team_name ipv6.method ignore
  nmcli connection add type vlan con-name $team_name-vlan$vlan ifname $team_name.$vlan id $vlan dev $team_name ip4 $net1_ip/$(mask2cidr $netmask) gw4 $net1_gw
 else
  echo "Configure $team_name for static"
  nmcli connection modify $team_name ipv4.addresses $net1_ip/$(mask2cidr $netmask) ipv4.gateway $net1_gw ipv4.method manual

 fi 
cat <<CONF>/etc/resolv.conf 
# Generated by Image Streamer
search $domain
nameserver $dns1
nameserver $dns2
CONF

cat <<CONF>/etc/sysconfig/network
#This file has been modified by Image Streamer.
NETWORKING=yes
GATEWAY=$net1_gw 
CONF

fi

nmcli connection up $team_name

exit 0
END


#Parent script for NIC Teaming.

upload -<<END /EFI/HPE/isdeploy/scripts/04Mgmt-bonding-configuration.bash
#! /bin/bash
team_count=@TotalNICTeamings:1@
team0=@NICTeam0Name:team0@
team1=@NICTeam1Name:team1@
echo "Script Started for Teaming"

ISROOT="/boot/efi/EFI/HPE/isdeploy"

cat <<'CONF'> /boot/efi/EFI/HPE/isdeploy/tmp/interface_names
echo " Making This Directory to Test"
CONF

for i in `seq 1 $team_count`
do
	if [ $i -eq 1 ];then
		echo $team0 > ${ISROOT}/tmp/interface_names
		if [[ "@Team0NIC1.ipaddress@" =~ [0-9]*\.[0-9]*\.[0-9]*\.[0-9]* ]]; then
			sh ${ISROOT}/tmp/Mgmt-NIC-bonding.bash $team0 @Team0NIC1.mac@ @Team0NIC2.mac@ @Team0NIC1.vlanid@ @Team0NIC1.ipaddress@ @Team0NIC1.gateway@ @Team0NIC1.domain@ @Team0NIC1.dns1@ @Team0NIC1.dns2@ @Team0NIC1.netmask@ 
			echo Team0NIC2_vlan:@Team0NIC2.vlanid@
		else
			sh ${ISROOT}/tmp/Mgmt-NIC-bonding.bash $team0 @Team0NIC1.mac@ @Team0NIC2.mac@ @Team0NIC1.vlanid@
			echo Team0NIC2_vlan:@Team0NIC2.vlanid@
		fi
	elif [ $i -eq 2 ];then
		echo $team1 >> ${ISROOT}/tmp/interface_names 
		if [[ "@Team1NIC1.ipaddress@" =~ [0-9]*\.[0-9]*\.[0-9]*\.[0-9]* ]]; then
			sh ${ISROOT}/tmp/Mgmt-NIC-bonding.bash $team1 @Team1NIC1.mac@ @Team1NIC2.mac@ @Team1NIC1.vlanid@ @Team1NIC1.ipaddress@ @Team1NIC1.gateway@ @Team1NIC1.domain@ @Team1NIC1.dns1@ @Team1NIC1.dns2@ @Team1NIC1.netmask@ 
			Team1NIC2_vlan:@Team1NIC2.vlanid@
		else
			sh ${ISROOT}/tmp/Mgmt-NIC-bonding.bash $team1 @Team1NIC1.mac@ @Team1NIC2.mac@ @Team1NIC1.vlanid@
			echo Team1NIC2_vlan:@Team1NIC2.vlanid@
		fi
	fi
done


echo "Configured bonding successfully"

END